{"remainingRequest":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lxt/SupplyChain-master/iview-admin/src/view/single-page/message/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lxt/SupplyChain-master/iview-admin/src/view/single-page/message/index.vue","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\nconst listDic = {\n  unread: 'messageUnreadList',\n  readed: 'messageReadedList',\n  trash: 'messageTrashList'\n}\nexport default {\n  name: 'message_page',\n  data () {\n    return {\n      listLoading: true,\n      contentLoading: false,\n      currentMessageType: 'unread',\n      messageContent: '',\n      showingMsgItem: {}\n    }\n  },\n  computed: {\n    ...mapState({\n      messageUnreadList: state => state.user.messageUnreadList,\n      messageReadedList: state => state.user.messageReadedList,\n      messageTrashList: state => state.user.messageTrashList,\n      messageList () {\n        return this[listDic[this.currentMessageType]]\n      },\n      titleClass () {\n        return {\n          'not-unread-list': this.currentMessageType !== 'unread'\n        }\n      }\n    }),\n    ...mapGetters([\n      'messageUnreadCount',\n      'messageReadedCount',\n      'messageTrashCount'\n    ])\n  },\n  methods: {\n    ...mapMutations([\n      //\n    ]),\n    ...mapActions([\n      'getContentByMsgId',\n      'getMessageList',\n      'hasRead',\n      'removeReaded',\n      'restoreTrash'\n    ]),\n    stopLoading (name) {\n      this[name] = false\n    },\n    handleSelect (name) {\n      this.currentMessageType = name\n    },\n    handleView (msg_id) {\n      this.contentLoading = true\n      this.getContentByMsgId({ msg_id }).then(content => {\n        this.messageContent = content\n        const item = this.messageList.find(item => item.msg_id === msg_id)\n        if (item) this.showingMsgItem = item\n        if (this.currentMessageType === 'unread') this.hasRead({ msg_id })\n        this.stopLoading('contentLoading')\n      }).catch(() => {\n        this.stopLoading('contentLoading')\n      })\n    },\n    removeMsg (item) {\n      item.loading = true\n      const msg_id = item.msg_id\n      if (this.currentMessageType === 'readed') this.removeReaded({ msg_id })\n      else this.restoreTrash({ msg_id })\n    }\n  },\n  mounted () {\n    this.listLoading = true\n    // 请求获取消息列表\n    this.getMessageList().then(() => this.stopLoading('listLoading')).catch(() => this.stopLoading('listLoading'))\n  }\n}\n",null]}