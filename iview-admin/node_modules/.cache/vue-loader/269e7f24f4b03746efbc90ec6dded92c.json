{"remainingRequest":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lxt/SupplyChain-master/iview-admin/src/components/main/components/side-menu/side-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lxt/SupplyChain-master/iview-admin/src/components/main/components/side-menu/side-menu.vue","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SideMenuItem from './side-menu-item.vue'\nimport CollapsedMenu from './collapsed-menu.vue'\nimport { getUnion } from '@/libs/tools'\nimport mixin from './mixin'\n\nexport default {\n  name: 'SideMenu',\n  mixins: [ mixin ],\n  components: {\n    SideMenuItem,\n    CollapsedMenu\n  },\n  props: {\n    menuList: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    collapsed: {\n      type: Boolean\n    },\n    theme: {\n      type: String,\n      default: 'dark'\n    },\n    rootIconSize: {\n      type: Number,\n      default: 20\n    },\n    iconSize: {\n      type: Number,\n      default: 16\n    },\n    accordion: Boolean,\n    activeName: {\n      type: String,\n      default: ''\n    },\n    openNames: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data () {\n    return {\n      openedNames: []\n    }\n  },\n  methods: {\n    handleSelect (name) {\n      this.$emit('on-select', name)\n    },\n    getOpenedNamesByActiveName (name) {\n      return this.$route.matched.map(item => item.name).filter(item => item !== name)\n    },\n    updateOpenName (name) {\n      if (name === this.$config.homeName) this.openedNames = []\n      else this.openedNames = this.getOpenedNamesByActiveName(name)\n    }\n  },\n  computed: {\n    textColor () {\n      return this.theme === 'dark' ? '#fff' : '#495060'\n    }\n  },\n  watch: {\n    activeName (name) {\n      if (this.accordion) this.openedNames = this.getOpenedNamesByActiveName(name)\n      else this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\n    },\n    openNames (newNames) {\n      this.openedNames = newNames\n    },\n    openedNames () {\n      this.$nextTick(() => {\n        this.$refs.menu.updateOpened()\n      })\n    }\n  },\n  mounted () {\n    this.openedNames = getUnion(this.openedNames, this.getOpenedNamesByActiveName(name))\n  }\n}\n",null]}