{"remainingRequest":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js!/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lxt/SupplyChain-master/iview-admin/src/view/single-page/message/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lxt/SupplyChain-master/iview-admin/src/view/single-page/message/index.vue","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/.babelrc","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/home/lxt/SupplyChain-master/iview-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\nvar listDic = {\n  unread: 'messageUnreadList',\n  readed: 'messageReadedList',\n  trash: 'messageTrashList'\n};\nexport default {\n  name: 'message_page',\n  data: function data() {\n    return {\n      listLoading: true,\n      contentLoading: false,\n      currentMessageType: 'unread',\n      messageContent: '',\n      showingMsgItem: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    messageUnreadList: function messageUnreadList(state) {\n      return state.user.messageUnreadList;\n    },\n    messageReadedList: function messageReadedList(state) {\n      return state.user.messageReadedList;\n    },\n    messageTrashList: function messageTrashList(state) {\n      return state.user.messageTrashList;\n    },\n    messageList: function messageList() {\n      return this[listDic[this.currentMessageType]];\n    },\n    titleClass: function titleClass() {\n      return {\n        'not-unread-list': this.currentMessageType !== 'unread'\n      };\n    }\n  })), mapGetters(['messageUnreadCount', 'messageReadedCount', 'messageTrashCount'])),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapMutations([//\n  ])), mapActions(['getContentByMsgId', 'getMessageList', 'hasRead', 'removeReaded', 'restoreTrash'])), {}, {\n    stopLoading: function stopLoading(name) {\n      this[name] = false;\n    },\n    handleSelect: function handleSelect(name) {\n      this.currentMessageType = name;\n    },\n    handleView: function handleView(msg_id) {\n      var _this = this;\n\n      this.contentLoading = true;\n      this.getContentByMsgId({\n        msg_id: msg_id\n      }).then(function (content) {\n        _this.messageContent = content;\n\n        var item = _this.messageList.find(function (item) {\n          return item.msg_id === msg_id;\n        });\n\n        if (item) _this.showingMsgItem = item;\n        if (_this.currentMessageType === 'unread') _this.hasRead({\n          msg_id: msg_id\n        });\n\n        _this.stopLoading('contentLoading');\n      }).catch(function () {\n        _this.stopLoading('contentLoading');\n      });\n    },\n    removeMsg: function removeMsg(item) {\n      item.loading = true;\n      var msg_id = item.msg_id;\n      if (this.currentMessageType === 'readed') this.removeReaded({\n        msg_id: msg_id\n      });else this.restoreTrash({\n        msg_id: msg_id\n      });\n    }\n  }),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.listLoading = true; // 请求获取消息列表\n\n    this.getMessageList().then(function () {\n      return _this2.stopLoading('listLoading');\n    }).catch(function () {\n      return _this2.stopLoading('listLoading');\n    });\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Card shadow>\n    <div>\n      <div class=\"message-page-con message-category-con\">\n        <Menu width=\"auto\" active-name=\"unread\" @on-select=\"handleSelect\">\n          <MenuItem name=\"unread\">\n            <span class=\"category-title\">未读消息</span><Badge style=\"margin-left: 10px\" :count=\"messageUnreadCount\"></Badge>\n          </MenuItem>\n          <MenuItem name=\"readed\">\n            <span class=\"category-title\">已读消息</span><Badge style=\"margin-left: 10px\" class-name=\"gray-dadge\" :count=\"messageReadedCount\"></Badge>\n          </MenuItem>\n          <MenuItem name=\"trash\">\n            <span class=\"category-title\">回收站</span><Badge style=\"margin-left: 10px\" class-name=\"gray-dadge\" :count=\"messageTrashCount\"></Badge>\n          </MenuItem>\n        </Menu>\n      </div>\n      <div class=\"message-page-con message-list-con\">\n        <Spin fix v-if=\"listLoading\" size=\"large\"></Spin>\n        <Menu\n          width=\"auto\"\n          active-name=\"\"\n          :class=\"titleClass\"\n          @on-select=\"handleView\"\n        >\n          <MenuItem v-for=\"item in messageList\" :name=\"item.msg_id\" :key=\"`msg_${item.msg_id}`\">\n            <div>\n              <p class=\"msg-title\">{{ item.title }}</p>\n              <Badge status=\"default\" :text=\"item.create_time\" />\n              <Button\n                style=\"float: right;margin-right: 20px;\"\n                :style=\"{ display: item.loading ? 'inline-block !important' : '' }\"\n                :loading=\"item.loading\"\n                size=\"small\"\n                :icon=\"currentMessageType === 'readed' ? 'md-trash' : 'md-redo'\"\n                :title=\"currentMessageType === 'readed' ? '删除' : '还原'\"\n                type=\"text\"\n                v-show=\"currentMessageType !== 'unread'\"\n                @click.native.stop=\"removeMsg(item)\"></Button>\n            </div>\n          </MenuItem>\n        </Menu>\n      </div>\n      <div class=\"message-page-con message-view-con\">\n        <Spin fix v-if=\"contentLoading\" size=\"large\"></Spin>\n        <div class=\"message-view-header\">\n          <h2 class=\"message-view-title\">{{ showingMsgItem.title }}</h2>\n          <time class=\"message-view-time\">{{ showingMsgItem.create_time }}</time>\n        </div>\n        <div v-html=\"messageContent\"></div>\n      </div>\n    </div>\n  </Card>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapMutations, mapActions } from 'vuex'\nconst listDic = {\n  unread: 'messageUnreadList',\n  readed: 'messageReadedList',\n  trash: 'messageTrashList'\n}\nexport default {\n  name: 'message_page',\n  data () {\n    return {\n      listLoading: true,\n      contentLoading: false,\n      currentMessageType: 'unread',\n      messageContent: '',\n      showingMsgItem: {}\n    }\n  },\n  computed: {\n    ...mapState({\n      messageUnreadList: state => state.user.messageUnreadList,\n      messageReadedList: state => state.user.messageReadedList,\n      messageTrashList: state => state.user.messageTrashList,\n      messageList () {\n        return this[listDic[this.currentMessageType]]\n      },\n      titleClass () {\n        return {\n          'not-unread-list': this.currentMessageType !== 'unread'\n        }\n      }\n    }),\n    ...mapGetters([\n      'messageUnreadCount',\n      'messageReadedCount',\n      'messageTrashCount'\n    ])\n  },\n  methods: {\n    ...mapMutations([\n      //\n    ]),\n    ...mapActions([\n      'getContentByMsgId',\n      'getMessageList',\n      'hasRead',\n      'removeReaded',\n      'restoreTrash'\n    ]),\n    stopLoading (name) {\n      this[name] = false\n    },\n    handleSelect (name) {\n      this.currentMessageType = name\n    },\n    handleView (msg_id) {\n      this.contentLoading = true\n      this.getContentByMsgId({ msg_id }).then(content => {\n        this.messageContent = content\n        const item = this.messageList.find(item => item.msg_id === msg_id)\n        if (item) this.showingMsgItem = item\n        if (this.currentMessageType === 'unread') this.hasRead({ msg_id })\n        this.stopLoading('contentLoading')\n      }).catch(() => {\n        this.stopLoading('contentLoading')\n      })\n    },\n    removeMsg (item) {\n      item.loading = true\n      const msg_id = item.msg_id\n      if (this.currentMessageType === 'readed') this.removeReaded({ msg_id })\n      else this.restoreTrash({ msg_id })\n    }\n  },\n  mounted () {\n    this.listLoading = true\n    // 请求获取消息列表\n    this.getMessageList().then(() => this.stopLoading('listLoading')).catch(() => this.stopLoading('listLoading'))\n  }\n}\n</script>\n\n<style lang=\"less\">\n.message-page{\n  &-con{\n    height: ~\"calc(100vh - 176px)\";\n    display: inline-block;\n    vertical-align: top;\n    position: relative;\n    &.message-category-con{\n      border-right: 1px solid #e6e6e6;\n      width: 200px;\n    }\n    &.message-list-con{\n      border-right: 1px solid #e6e6e6;\n      width: 230px;\n    }\n    &.message-view-con{\n      position: absolute;\n      left: 446px;\n      top: 16px;\n      right: 16px;\n      bottom: 16px;\n      overflow: auto;\n      padding: 12px 20px 0;\n      .message-view-header{\n        margin-bottom: 20px;\n        .message-view-title{\n          display: inline-block;\n        }\n        .message-view-time{\n          margin-left: 20px;\n        }\n      }\n    }\n    .category-title{\n      display: inline-block;\n      width: 65px;\n    }\n    .gray-dadge{\n      background: gainsboro;\n    }\n    .not-unread-list{\n      .msg-title{\n        color: rgb(170, 169, 169);\n      }\n      .ivu-menu-item{\n        .ivu-btn.ivu-btn-text.ivu-btn-small.ivu-btn-icon-only{\n          display: none;\n        }\n        &:hover{\n          .ivu-btn.ivu-btn-text.ivu-btn-small.ivu-btn-icon-only{\n            display: inline-block;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/view/single-page/message"}]}