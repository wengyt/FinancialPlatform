{"remainingRequest":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js!/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lxt/SupplyChain-master/iview-admin/src/view/SupplyChain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lxt/SupplyChain-master/iview-admin/src/view/SupplyChain.vue","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/.babelrc","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/lxt/SupplyChain-master/iview-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"@/libs/api.request\";\nimport qs from 'qs'; // Vue.prototype.$qs = qs\n\nexport default {\n  data: function data() {\n    //那个中间的单据表\n    return {\n      columns: [\n      /*{\n        type: 'selection',\n        width: 60,\n        align: 'center'\n      },*/\n      {\n        title: '单据刷新原因',\n        align: 'center',\n        key: 'ReceiptType',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '单据ID',\n        align: 'center',\n        key: 'receiptID',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '发起者地址',\n        align: 'center',\n        key: 'fromAccount',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '收款人地址',\n        align: 'center',\n        key: 'toAccount',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '金额',\n        align: 'center',\n        key: 'amount',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '确认人地址',\n        align: 'center',\n        key: 'prover',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '是否已融资',\n        align: 'center',\n        key: 'financinged',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }, {\n        title: '是否已结算',\n        align: 'center',\n        key: 'settled',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      },\n      /*\n      {\n        title: '被转让记录',\n        align: 'center',\n        key: 'transferRecord',\n        // 过滤器\n        render: (h, params) => {\n          let temp = params.row[params.column.key]\n          if (typeof (temp) === 'undefined') {\n            return h('div', '0')\n          } else {\n            return h('div', params.row[params.column.key])\n          }\n        }\n      },\n      */\n      {\n        title: '剩余价值',\n        align: 'center',\n        key: 'leftValue',\n        // 过滤器\n        render: function render(h, params) {\n          var temp = params.row[params.column.key];\n\n          if (typeof temp === 'undefined') {\n            return h('div', '0');\n          } else {\n            return h('div', params.row[params.column.key]);\n          }\n        }\n      }],\n      // 表单校验对象\n      //3.0.2 AddContractRules\n      AddContractRules: {\n        fromAccount: [{\n          required: true,\n          message: '欠款人地址不能为空',\n          trigger: 'blur'\n        }],\n        toAccount: [{\n          required: true,\n          message: '转让地址（收款人）不能为空',\n          trigger: 'blur'\n        }],\n        prover: [{\n          required: true,\n          message: '见证方地址不能为空',\n          trigger: 'blur'\n        }],\n        amount: [{\n          required: true,\n          message: '金额不能为空',\n          trigger: 'blur'\n        }]\n      },\n      TransferRules: {\n        fromAccount: [{\n          required: true,\n          message: '此单据拥有者地址不能为空',\n          trigger: 'blur'\n        }],\n        toAccount: [{\n          required: true,\n          message: '转让地址不能为空',\n          trigger: 'blur'\n        }],\n        amount: [{\n          required: true,\n          message: '金额不能为空',\n          trigger: 'blur'\n        }],\n        receiptID: [{\n          required: true,\n          message: '单据ID不能为空',\n          trigger: 'blur'\n        }]\n      },\n      FinancingRules: {\n        receiptID: [{\n          required: true,\n          message: '单据ID不能为空',\n          trigger: 'blur'\n        }]\n      },\n      SettleRules: {\n        receiptID: [{\n          required: true,\n          message: '单据ID不能为空',\n          trigger: 'blur'\n        }]\n      },\n      page: {\n        // 系统用户翻页对象\n        total: 10,\n        currentPage: 1,\n        current: 1\n      },\n      isAddContract: false,\n      isTransfer: false,\n      isFinancing: false,\n      isSettle: false,\n      //isInfo: false,\n      AddContractForm: {},\n      TransferForm: {},\n      FinancingForm: {},\n      SettleForm: {},\n      //infoForm: {},\n      datalist: []\n    };\n  },\n  methods: {\n    //make Transfer   ccccccccccccccccccccccccccccccccc\n    //点击Transfer的确认交易后1.1\n    makeTransfer2: function () {\n      var _makeTransfer = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(params) {\n        var self, result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                self = this;\n                result = {};\n                console.info('param ', params);\n                self.datalist.push(params);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeTransfer2(_x) {\n        return _makeTransfer.apply(this, arguments);\n      }\n\n      return makeTransfer2;\n    }(),\n    makeTransfer: function () {\n      var _makeTransfer2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(params) {\n        var self, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //直接全局变量给他是不行的\n                //要设置一个self中介\n                self = this;\n                result = {};\n                console.info('param ', params);\n                _context2.next = 5;\n                return axios.request({\n                  url: \"Transfer\",\n                  data: params,\n                  headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                  },\n                  method: \"post\"\n                }).then(function (res) {\n                  //得到res！？？？？\n                  console.info(res.data); //得到控制台的数据\n\n                  result = res.data;\n                  var retCode = result.output;\n                  self.datalist.push(params);\n                  /*\n                  if(retCode[0] != \"0\") {\n                      }\n                      else {\n                          self.datalist.push(params)\n                          console.info('333',result.output)\n                          return 1\n                      }\n                      */\n\n                  var form = {};\n                  form.ReceiptType = \"transfer\"; //!!!!\n\n                  form.receiptID = self.datalist.length + 1;\n                  form.fromAccount = this.AddContractForm.fromAccount;\n                  form.toAccount = this.AddContractForm.toAccount;\n                  form.amount = this.AddContractForm.amount;\n                  form.prover = 0;\n                  form.financinged = 0;\n                  form.settled = 0;\n                  form.transferRecord = [];\n                  form.leftValue = this.AddContractForm.amount;\n                  self.datalist.push(form); //let flag = false\n\n                  var form1 = {};\n                  form1.ReceiptType = \"fresh\"; //!!!!\n\n                  form1.receiptID = self.datalist.length + 1;\n                  form1.fromAccount = self.datalist[this.AddContractForm.receiptID - 1].fromAccount;\n                  form1.toAccount = self.datalist[this.AddContractForm.receiptID - 1].toAccount;\n                  form1.amount = self.datalist[this.AddContractForm.receiptID - 1].amount;\n                  form1.prover = self.datalist[this.AddContractForm.receiptID - 1].prover;\n                  form1.financinged = 0;\n                  form1.settled = 0;\n                  form1.transferRecord = self.datalist[this.AddContractForm.receiptID - 1].transferRecord.push(form.receiptID);\n                  form1.leftValue = self.datalist[this.AddContractForm.receiptID - 1].amount - this.AddContractForm.amount;\n                  self.datalist.push(form1);\n                  /*\n                  if(flag == true){\n                    self.datalist.push(form)\n                  }*/\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function makeTransfer(_x2) {\n        return _makeTransfer2.apply(this, arguments);\n      }\n\n      return makeTransfer;\n    }(),\n    //5.0\n    makeAddContract: function () {\n      var _makeAddContract = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(params) {\n        var self, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //直接全局变量给他是不行的\n                //要设置一个self中介\n                self = this;\n                result = {}; //   let da = {\n                //     contractName: param,\n                //   }\n\n                console.info('param ', params);\n                _context3.next = 5;\n                return axios.request({\n                  url: \"AddContract\",\n                  data: params,\n                  headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                  },\n                  method: \"post\"\n                }).then(function (res) {\n                  console.info(res.data);\n                  result = res.data;\n                  var retCode = result.output; //发起新合同失败  这部分独有\n\n                  if (retCode = 0) {} else {\n                    self.datalist.push(params);\n                    /*\n                    let form = {}\n                    form.ReceiptType = \"new\"  //!!!!\n                    form.receiptID = self.datalist.length+1\n                    form.fromAccount = this.AddContractForm.fromAccount\n                    form.toAccount = this.AddContractForm.toAccount\n                    form.amount = this.AddContractForm.amount\n                    form.prover = this.AddContractForm.prover\n                     form.financinged = 0\n                    form.settled = 0\n                    form.transferRecord = []\n                    form.leftValue = this.AddContractForm.amount\n                    data:form\n                    self.datalist.push(form)\n                    */\n\n                    console.info('333', result.output);\n                    return 1;\n                  }\n                  /*\n                  let form = {}\n                  form.ReceiptType = \"new\"  //!!!!\n                  form.receiptID = self.datalist.length+1\n                  form.fromAccount = this.AddContractForm.fromAccount\n                  form.toAccount = this.AddContractForm.toAccount\n                  form.amount = this.AddContractForm.amount\n                  form.prover = this.AddContractForm.prover\n                   form.financinged = 0\n                  form.settled = 0\n                  form.transferRecord = []\n                  form.leftValue = this.AddContractForm.amount\n                  self.datalist.push(form)\n                  */\n                  //let flag = false\n\n                  /*\n                  for(let i = 0; i < self.datalist.length; i = i +1){\n                      self.datalist[i].ReceiptType == form.ReceiptType\n                          flag = true\n                          self.datalist[i].receiptID = form.receiptID\n                          self.datalist[i].fromAccount = form.fromAccount\n                          self.datalist[i].toAccount = form.toAccount\n                          self.datalist[i].amount = form.amount\n                          self.datalist[i].prover = form.prover\n                           self.datalist[i].financinged = form.financinged\n                          self.datalist[i].settled = form.settled\n                          self.datalist[i].transferRecord = form.transferRecord\n                          self.datalist[i].leftValue = form.leftValue\n                      }\n                  }\n                  if(flag == false){\n                      self.datalist.push(form)\n                  }*/\n                  // this.list.push({name: 'Asset'})\n                  //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function makeAddContract(_x3) {\n        return _makeAddContract.apply(this, arguments);\n      }\n\n      return makeAddContract;\n    }(),\n    makeFinancing: function () {\n      var _makeFinancing = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(params) {\n        var self, result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                //直接全局变量给他是不行的\n                //要设置一个self中介\n                self = this;\n                result = {}; //   let da = {\n                //     contractName: param,\n                //   }\n\n                console.info('param ', params);\n                _context4.next = 5;\n                return axios.request({\n                  url: \"Financing\",\n                  data: params,\n                  headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                  },\n                  method: \"post\"\n                }).then(function (res) {\n                  console.info(res.data);\n                  result = res.data;\n                  var retCode = result.output; //发起新合同失败  这部分独有\n\n                  if (retCode[0] != 0) {} else {\n                    self.datalist.push(params);\n                    console.info('333', result.output);\n                    return 1;\n                  } // this.list.push({name: 'Asset'})\n                  //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function makeFinancing(_x4) {\n        return _makeFinancing.apply(this, arguments);\n      }\n\n      return makeFinancing;\n    }(),\n    makeSettle: function () {\n      var _makeSettle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(params) {\n        var self, result;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                //直接全局变量给他是不行的\n                //要设置一个self中介\n                self = this;\n                result = {}; //   let da = {\n                //     contractName: param,\n                //   }\n\n                console.info('param ', params);\n                _context5.next = 5;\n                return axios.request({\n                  url: \"Settle\",\n                  data: params,\n                  headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                  },\n                  method: \"post\"\n                }).then(function (res) {\n                  console.info(res.data);\n                  result = res.data;\n                  var retCode = result.output; //发起新合同失败  这部分独有\n\n                  /*\n                    if(retCode[0] != \"0\") {\n                    }\n                    else {\n                        self.datalist.push(params)\n                        console.info('333',result.output)\n                        return 1\n                    }\n                    */\n\n                  var form1 = {};\n                  form1.ReceiptType = \"financing\";\n                  form1.receiptID = self.datalist.length + 1;\n                  form1.fromAccount = self.datalist[this.AddContractForm.receiptID - 1].fromAccount;\n                  form1.toAccount = self.datalist[this.AddContractForm.receiptID - 1].toAccount;\n                  form1.amount = self.datalist[this.AddContractForm.receiptID - 1].amount;\n                  form1.prover = self.datalist[this.AddContractForm.receiptID - 1].prover;\n                  form1.financinged = self.datalist[this.AddContractForm.receiptID - 1].financinged;\n                  form1.settled = 1;\n                  form1.transferRecord = self.datalist[this.AddContractForm.receiptID - 1].transferRecord;\n                  form1.leftValue = 0;\n                  self.datalist.push(form1); // this.list.push({name: 'Asset'})\n                  //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function makeSettle(_x5) {\n        return _makeSettle.apply(this, arguments);\n      }\n\n      return makeSettle;\n    }(),\n    //2.0 导致isAddContract为1\n    openAddContract: function openAddContract() {\n      this.isAddContract = true;\n    },\n    //4.0\n    doAddContract: function doAddContract() {\n      var _this = this;\n\n      var self = this;\n      this.$refs.AddContractForm.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(valid) {\n          var content;\n          return regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  //检验表单\n                  if (valid) {\n                    //console.info('AddContract form',this.AddContractForm.account, this.AddContractForm.property, this.AddContractForm.credit)\n                    content = {};\n                    content.ReceiptType = \"new\"; //!!!!\n\n                    content.receiptID = self.datalist.length + 1;\n                    content.fromAccount = _this.AddContractForm.fromAccount;\n                    content.toAccount = _this.AddContractForm.toAccount;\n                    content.prover = _this.AddContractForm.prover;\n                    content.amount = _this.AddContractForm.amount;\n                    content.financinged = 0;\n                    content.settled = 0;\n                    /*\n                    content.transferRecord = {}\n                    let t\n                    t.content.transferRecord.length=0\n                    content.transferRecord.push(t)\n                    */\n\n                    content.leftValue = _this.AddContractForm.amount; //content.contract = DEFAULTCONTRCT\n                    //content.addr = DEFAULTCONTRACTADDRESS\n\n                    content.func = 'AddContract'; //5.0\n\n                    _this.makeAddContract(content);\n\n                    _this.$Message.success('发起新合同成功');\n\n                    _this.cancelAddContract();\n                  } else {\n                    _this.$Message.error('请正确填写表单');\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x6) {\n          return _ref.apply(this, arguments);\n        };\n      }()); // this.isAddContract = false\n    },\n    cancelAddContract: function cancelAddContract() {\n      // 重置功能添加表单对象\n      this.$refs.AddContractForm.resetFields();\n      this.AddContractForm = {};\n      this.isAddContract = false;\n    },\n    openFinancing: function openFinancing() {\n      this.isFinancing = true;\n    },\n    doFinancing: function doFinancing() {\n      var _this2 = this;\n\n      var self = this;\n      this.$refs.FinancingForm.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(valid) {\n          var content;\n          return regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  //检验表单\n                  if (valid) {\n                    content = {};\n                    content.ReceiptType = \"financing\";\n                    content.receiptID = _this2.FinancingForm.receiptID; //content.receiptID = this.FinancingForm.receiptID\n\n                    content.fromAccount = self.datalist[_this2.FinancingForm.receiptID - 1].fromAccount;\n                    content.toAccount = self.datalist[_this2.FinancingForm.receiptID - 1].toAccount;\n                    content.amount = self.datalist[_this2.FinancingForm.receiptID - 1].amount;\n                    content.prover = self.datalist[_this2.FinancingForm.receiptID - 1].prover;\n                    content.financinged = 1;\n                    content.settled = self.datalist[_this2.FinancingForm.receiptID - 1].settled; //content.contract = DEFAULTCONTRCT\n                    //content.addr = DEFAULTCONTRACTADDRESS\n\n                    content.func = 'Financing'; //content.receiptID = this.FinancingForm.receiptID\n                    //content.transferRecord = self.datalist[this.FinancingForm.receiptID-1].transferRecord\n\n                    content.leftValue = 0;\n\n                    _this2.makeFinancing(content);\n\n                    _this2.$Message.success('单据融资成功');\n\n                    _this2.cancelFinancing();\n                  } else {\n                    _this2.$Message.error('请正确填写表单');\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x7) {\n          return _ref2.apply(this, arguments);\n        };\n      }()); // this.isFinancing = false\n    },\n    cancelFinancing: function cancelFinancing() {\n      // 重置功能添加表单对象\n      this.$refs.FinancingForm.resetFields();\n      this.FinancingForm = {};\n      this.isFinancing = false;\n    },\n    openSettle: function openSettle() {\n      this.isSettle = true;\n    },\n    doSettle: function doSettle() {\n      var _this3 = this;\n\n      var self = this;\n      this.$refs.SettleForm.validate( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(valid) {\n          var content;\n          return regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  //检验表单\n                  if (valid) {\n                    content = {};\n                    content.receiptID = _this3.SettleForm.receiptID; //content.contract = DEFAULTCONTRCT\n                    //content.addr = DEFAULTCONTRACTADDRESS\n\n                    content.func = 'Settle';\n\n                    _this3.makeSettle(content);\n\n                    _this3.$Message.success('结算账款成功');\n\n                    _this3.cancelSettle();\n                  } else {\n                    _this3.$Message.error('请正确填写表单');\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n\n        return function (_x8) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    cancelSettle: function cancelSettle() {\n      // 重置功能添加表单对象\n      this.$refs.SettleForm.resetFields();\n      this.SettleForm = {};\n      this.isSettle = false;\n    },\n    //点击Transfer的确认交易后1.0\n    cancelTransfer: function cancelTransfer() {\n      this.$refs.TransferForm.resetFields();\n      this.TransferForm = {};\n      this.isTransfer = false;\n    },\n    //打开单据转让\n    openTransfer: function openTransfer() {\n      this.isTransfer = true;\n    },\n    doTransfer: function doTransfer() {\n      var _this4 = this;\n\n      var self = this;\n      this.$refs.TransferForm.validate( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(valid) {\n          var content;\n          return regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  //检验表单\n                  if (valid) {\n                    content = {};\n                    content.ReceiptType = \"transfer\"; //!!!!\n\n                    content.receiptID = self.datalist.length + 1;\n                    content.fromAccount = _this4.TransferForm.fromAccount;\n                    content.toAccount = _this4.TransferForm.toAccount;\n                    content.amount = _this4.TransferForm.amount;\n                    content.prover = 0;\n                    content.financinged = 0;\n                    content.settled = 0; //form.transferRecord = []\n\n                    content.leftValue = _this4.TransferForm.amount; //content.contract = DEFAULTCONTRCT\n                    //content.addr = DEFAULTCONTRACTADDRESS\n\n                    content.func = 'Transfer';\n\n                    _this4.makeTransfer(content); //点击Transfer的确认交易后1.1\n                    //   this.deploy(this.AddContractForm.name)\n\n\n                    _this4.$Message.success('单据转让成功');\n\n                    _this4.cancelTransfer();\n                  } else {\n                    _this4.$Message.error('请正确填写表单');\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n\n        return function (_x9) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }\n  /*\n  created () {\n    // this.deploy('Asset')\n    this.isRegister = false\n  },\n  */\n\n};",{"version":3,"sources":["SupplyChain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n  <div>\n    <!-- //页面里面的左上角（几个按钮上面的标题） -->\n    <Card>\n        <h1>SupplyChain</h1>\n        <Row style = \"margin: 10px 0\">\n            <Col span=\"20\">\n                <Row>\n                    <!-- 1.0 点击发起新合同 -->\n                    <Button type=\"primary\" style=\"width: 100px; font-size: 13px; margin-right: 10px\" @click=\"openAddContract\">发起新合同</Button>\n                    <Button type=\"primary\" style=\"width: 100px; font-size: 13px; margin-right: 10px\" @click=\"openTransfer\">单据转让</Button>\n                    <Button type=\"success\" style=\"width: 100px; font-size: 13px; margin-right: 10px\" @click=\"openFinancing\">单据融资</Button>\n                    <Button type=\"success\" style=\"width: 100px; font-size: 13px; margin-right: 10px\" @click=\"openSettle\">结算账款</Button>\n                </Row>\n            </Col>\n        </Row>\n    </Card>\n    <!-- //表格部分 -->  <!-- 先排版，内容看后面的datalist -->\n      <Card>\n      <Table border :columns=\"columns\" :data=\"datalist\" disabled-hover></Table>\n      <div style=\"margin: 10px;overflow: hidden\">\n          <div style=\"float: right;\">\n          <Page show-total show-elevator :total=\"page.total\" :current=\"page.currentPage\"\n                  ></Page>\n          </div>\n      </div>\n\n      <!-- 发起新合同 -->\n      </Card>\n      <!-- 3.0 isAddContract为1从而展开这个card -->\n      <Modal v-model=\"isAddContract\" title=\"发起新合同\">\n          <!-- 3.0.1 AddContractForm 是一个数组 3.0.2 AddContractRules -->\n          <Form :model=\"AddContractForm\" ref=\"AddContractForm\" :label-width=\"110\" :rules=\"AddContractRules\">\n              <FormItem label=\"欠款方地址\" prop=\"fromAccount\" >\n                  <Input  clearable v-model=\"AddContractForm.fromAccount\" placeholder = \"请输入新合同收款方地址\"/>\n              </FormItem>\n              <FormItem label=\"收款方地址\" prop=\"toAccount\" >\n                  <Input  clearable v-model=\"AddContractForm.toAccount\" placeholder = \"请输入新合同收款方地址\"/>\n              </FormItem>\n              <FormItem label=\"见证方地址\" prop=\"prover\" >\n                  <Input  clearable v-model=\"AddContractForm.prover\" placeholder = \"请输入见证该合同方地址\"/>\n              </FormItem>              \n              <FormItem label=\"金额\" prop=\"amount\" >\n                  <Input  clearable v-model=\"AddContractForm.amount\" placeholder = \"请输入转让金额\"/>\n              </FormItem>\n          </Form>\n          <div slot=\"footer\">\n            <!-- 3.0.3 点击取消 到cancelAddContract函数 -->\n            <Button type=\"text\" @click=\"cancelAddContract\">取消</Button>\n          <!-- 4.0 提交发起-->\n          <Button type=\"primary\" @click=\"doAddContract\">确认发起</Button>\n      </div>\n      </Modal>\n      \n\n      <!-- 单据转让 -->\n      <Modal v-model=\"isTransfer\" title=\"单据转让\">\n          <Form :model=\"TransferForm\" ref=\"TransferForm\" :label-width=\"110\" :rules=\"TransferRules\">\n              <FormItem label=\"单据拥有者地址\" prop=\"fromAccount\" >\n                  <Input  clearable v-model=\"TransferForm.fromAccount\" placeholder = \"请输入该用户地址\"/>\n              </FormItem>\n              <FormItem label=\"转让地址\" prop=\"toAccount\" >\n                  <Input  clearable v-model=\"TransferForm.toAccount\" placeholder = \"请输入该用户地址\"/>\n              </FormItem>\n              <FormItem label=\"金额\" prop=\"amount\" >\n                  <Input  clearable v-model=\"TransferForm.amount\" placeholder = \"请输入转让金额\"/>\n              </FormItem>\n              <FormItem label=\"单据ID\" prop=\"receiptID\" >\n                  <Input  clearable v-model=\"TransferForm.receiptID\" placeholder = \"请输入用于转让的凭借单据ID\"/>\n              </FormItem>\n          </Form>\n          <div slot=\"footer\">\n            <Button type=\"text\" @click=\"cancelTransfer\">取消</Button>\n          <Button type=\"primary\" @click=\"doTransfer\">确认交易</Button>\n      </div>\n      </Modal>\n\n      <!-- 单据融资 -->\n      <Modal v-model=\"isFinancing\" title=\"单据融资\">\n          <Form :model=\"FinancingForm\" ref=\"FinancingForm\" :label-width=\"110\" :rules=\"FinancingRules\">\n              <FormItem label=\"单据ID\" prop=\"receiptID\" >\n                  <Input  clearable v-model=\"FinancingForm.receiptID\" placeholder = \"请输入用于融资的凭借单据ID\"/>\n              </FormItem>\n          </Form>\n          <div slot=\"footer\">\n            <Button type=\"text\" @click=\"cancelFinancing\">取消</Button>\n          <Button type=\"primary\" @click=\"doFinancing\">确认融资</Button>\n      </div>\n      </Modal>\n\n      <!-- 结算账款 -->\n      <Modal v-model=\"isSettle\" title=\"结算账款\">\n          <Form :model=\"SettleForm\" ref=\"SettleForm\" :label-width=\"110\" :rules=\"SettleRules\">\n              <FormItem label=\"单据ID\" prop=\"receiptID\" >\n                  <Input  clearable v-model=\"SettleForm.receiptID\" placeholder = \"请输入结算的单据ID\"/>\n              </FormItem>\n          </Form>\n          <div slot=\"footer\">\n            <Button type=\"text\" @click=\"cancelSettle\">取消</Button>\n          <Button type=\"primary\" @click=\"doSettle\">确认已结算</Button>\n      </div>\n      </Modal>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"@/libs/api.request\";\nimport qs from 'qs';\n\n// Vue.prototype.$qs = qs\nexport default {\n  data() {\n    //那个中间的单据表\n    return {\n      columns: [\n        /*{\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        },*/\n        {\n          title: '单据刷新原因',\n          align: 'center',\n          key: 'ReceiptType',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '单据ID',\n          align: 'center',\n          key: 'receiptID',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '发起者地址',\n          align: 'center',\n          key: 'fromAccount',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '收款人地址',\n          align: 'center',\n          key: 'toAccount',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '金额',\n          align: 'center',\n          key: 'amount',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '确认人地址',\n          align: 'center',\n          key: 'prover',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '是否已融资',\n          align: 'center',\n          key: 'financinged',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        {\n          title: '是否已结算',\n          align: 'center',\n          key: 'settled',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        /*\n        {\n          title: '被转让记录',\n          align: 'center',\n          key: 'transferRecord',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n        */\n        {\n          title: '剩余价值',\n          align: 'center',\n          key: 'leftValue',\n          // 过滤器\n          render: (h, params) => {\n            let temp = params.row[params.column.key]\n            if (typeof (temp) === 'undefined') {\n              return h('div', '0')\n            } else {\n              return h('div', params.row[params.column.key])\n            }\n          }\n        },\n      ],\n\n      // 表单校验对象\n      //3.0.2 AddContractRules\n      AddContractRules: {\n        fromAccount: [\n          { required: true, message: '欠款人地址不能为空', trigger: 'blur' }\n        ],\n        toAccount: [\n          { required: true, message: '转让地址（收款人）不能为空', trigger: 'blur' }\n        ],\n        prover: [\n          { required: true, message: '见证方地址不能为空', trigger: 'blur' }\n        ],\n        amount: [\n          { required: true, message: '金额不能为空', trigger: 'blur' }\n        ],\n      },\n      TransferRules: {\n        fromAccount: [\n          { required: true, message: '此单据拥有者地址不能为空', trigger: 'blur' }\n        ],\n        toAccount: [\n          { required: true, message: '转让地址不能为空', trigger: 'blur' }\n        ],\n        amount: [\n          { required: true, message: '金额不能为空', trigger: 'blur' }\n        ],\n        receiptID: [\n          { required: true, message: '单据ID不能为空', trigger: 'blur' }\n        ],\n      },\n      FinancingRules: {\n        receiptID: [\n          { required: true, message: '单据ID不能为空', trigger: 'blur' }\n        ],\n      },\n      SettleRules: {\n        receiptID: [\n          { required: true, message: '单据ID不能为空', trigger: 'blur' }\n        ],\n      },\n     \n      page: {// 系统用户翻页对象\n        total: 10,\n        currentPage: 1,\n        current: 1\n      },\n      \n      isAddContract: false,\n      isTransfer: false,\n      isFinancing: false,\n      isSettle: false,\n      //isInfo: false,\n      AddContractForm: {},\n      TransferForm: {},\n      FinancingForm: {},\n      SettleForm: {},\n      //infoForm: {},\n      datalist: [\n      ]\n    };\n  },\n  \n  \n  methods: {\n      //make Transfer   ccccccccccccccccccccccccccccccccc\n    //点击Transfer的确认交易后1.1\n    async makeTransfer2(params) {\n        let self = this\n        let result = {}\n\n        console.info('param ',params)\n        self.datalist.push(params)\n    },\n    async makeTransfer(params) {\n      //直接全局变量给他是不行的\n      //要设置一个self中介\n      let self = this\n      let result = {}\n\n      console.info('param ',params)\n      await axios.request({\n          url: \"Transfer\",\n          data: params,\n          headers:{\n            'Content-type': 'application/x-www-form-urlencoded',\n          },\n          method: \"post\"\n      }).then(function(res) {  //得到res！？？？？\n          console.info(res.data);  //得到控制台的数据\n          result = res.data\n          let retCode = result.output\n          self.datalist.push(params)\n        /*\n        if(retCode[0] != \"0\") {\n            }\n            else {\n                self.datalist.push(params)\n                console.info('333',result.output)\n                return 1\n            }\n            */\n        let form = {}\n        form.ReceiptType = \"transfer\"  //!!!!\n        form.receiptID = self.datalist.length+1\n        form.fromAccount = this.AddContractForm.fromAccount\n        form.toAccount = this.AddContractForm.toAccount\n        form.amount = this.AddContractForm.amount\n        form.prover = 0\n\n        form.financinged = 0\n        form.settled = 0\n        form.transferRecord = []\n        form.leftValue = this.AddContractForm.amount\n        self.datalist.push(form)\n\n        //let flag = false\n        let form1 = {}\n        form1.ReceiptType = \"fresh\"  //!!!!\n        form1.receiptID = self.datalist.length+1\n        form1.fromAccount = self.datalist[this.AddContractForm.receiptID-1].fromAccount\n        form1.toAccount = self.datalist[this.AddContractForm.receiptID-1].toAccount\n        form1.amount = self.datalist[this.AddContractForm.receiptID-1].amount\n        form1.prover = self.datalist[this.AddContractForm.receiptID-1].prover\n\n        form1.financinged = 0\n        form1.settled = 0\n        form1.transferRecord = self.datalist[this.AddContractForm.receiptID-1].transferRecord.push(form.receiptID)\n        form1.leftValue = self.datalist[this.AddContractForm.receiptID-1].amount-this.AddContractForm.amount\n        self.datalist.push(form1)\n                \n        /*\n        if(flag == true){\n          self.datalist.push(form)\n        }*/\n\n        \n      });\n    },  \n\n    //5.0\n    async makeAddContract(params) {\n      //直接全局变量给他是不行的\n      //要设置一个self中介\n      let self = this\n      let result = {}\n      //   let da = {\n      //     contractName: param,\n      //   }\n      console.info('param ',params)\n      await axios.request({\n          url: \"AddContract\",\n          data: params,\n          headers:{\n            'Content-type': 'application/x-www-form-urlencoded',\n\n          },\n          method: \"post\"\n      }).then(function(res) {\n          console.info(res.data);\n          result = res.data\n          let retCode = result.output\n          //发起新合同失败  这部分独有\n          \n            if(retCode = 0) {\n            }\n            else {\n                self.datalist.push(params)\n                /*\n                let form = {}\n                form.ReceiptType = \"new\"  //!!!!\n                form.receiptID = self.datalist.length+1\n                form.fromAccount = this.AddContractForm.fromAccount\n                form.toAccount = this.AddContractForm.toAccount\n                form.amount = this.AddContractForm.amount\n                form.prover = this.AddContractForm.prover\n\n                form.financinged = 0\n                form.settled = 0\n                form.transferRecord = []\n                form.leftValue = this.AddContractForm.amount\n                data:form\n                self.datalist.push(form)\n                */\n                console.info('333',result.output)\n                return 1\n            }\n            \n          /*\n          let form = {}\n          form.ReceiptType = \"new\"  //!!!!\n          form.receiptID = self.datalist.length+1\n          form.fromAccount = this.AddContractForm.fromAccount\n          form.toAccount = this.AddContractForm.toAccount\n          form.amount = this.AddContractForm.amount\n          form.prover = this.AddContractForm.prover\n\n          form.financinged = 0\n          form.settled = 0\n          form.transferRecord = []\n          form.leftValue = this.AddContractForm.amount\n          self.datalist.push(form)\n          */\n          //let flag = false\n          /*\n          for(let i = 0; i < self.datalist.length; i = i +1){\n              self.datalist[i].ReceiptType == form.ReceiptType\n                  flag = true\n                  self.datalist[i].receiptID = form.receiptID\n                  self.datalist[i].fromAccount = form.fromAccount\n                  self.datalist[i].toAccount = form.toAccount\n                  self.datalist[i].amount = form.amount\n                  self.datalist[i].prover = form.prover\n\n                  self.datalist[i].financinged = form.financinged\n                  self.datalist[i].settled = form.settled\n                  self.datalist[i].transferRecord = form.transferRecord\n                  self.datalist[i].leftValue = form.leftValue\n              }\n          }\n          if(flag == false){\n              self.datalist.push(form)\n          }*/\n          \n          // this.list.push({name: 'Asset'})\n        //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n      });\n    },\n\n    async makeFinancing(params) {\n      //直接全局变量给他是不行的\n      //要设置一个self中介\n      let self = this\n      let result = {}\n      //   let da = {\n      //     contractName: param,\n      //   }\n      console.info('param ',params)\n      await axios.request({\n          url: \"Financing\",\n          data: params,\n          headers:{\n            'Content-type': 'application/x-www-form-urlencoded',\n          },\n          method: \"post\"\n      }).then(function(res) {\n          console.info(res.data);\n          result = res.data\n          let retCode = result.output\n          //发起新合同失败  这部分独有\n          \n            if(retCode[0] != 0) {\n            }\n            else {\n                self.datalist.push(params)\n                console.info('333',result.output)\n                return 1\n            }\n          // this.list.push({name: 'Asset'})\n        //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n      });\n    },  \n\n    async makeSettle(params) {\n      //直接全局变量给他是不行的\n      //要设置一个self中介\n      let self = this\n      let result = {}\n      //   let da = {\n      //     contractName: param,\n      //   }\n      console.info('param ',params)\n      await axios.request({\n          url: \"Settle\",\n          data: params,\n          headers:{\n            'Content-type': 'application/x-www-form-urlencoded',\n          },\n          method: \"post\"\n      }).then(function(res) {\n          console.info(res.data);\n          result = res.data\n          let retCode = result.output\n          //发起新合同失败  这部分独有\n          /*\n            if(retCode[0] != \"0\") {\n            }\n            else {\n                self.datalist.push(params)\n                console.info('333',result.output)\n                return 1\n            }\n            */\n          let form1 = {}\n          form1.ReceiptType = \"financing\" \n          form1.receiptID = self.datalist.length+1\n          form1.fromAccount = self.datalist[this.AddContractForm.receiptID-1].fromAccount\n          form1.toAccount = self.datalist[this.AddContractForm.receiptID-1].toAccount\n          form1.amount = self.datalist[this.AddContractForm.receiptID-1].amount\n          form1.prover = self.datalist[this.AddContractForm.receiptID-1].prover\n\n          form1.financinged = self.datalist[this.AddContractForm.receiptID-1].financinged\n          form1.settled = 1\n          form1.transferRecord = self.datalist[this.AddContractForm.receiptID-1].transferRecord\n          form1.leftValue = 0\n          self.datalist.push(form1)\n          // this.list.push({name: 'Asset'})\n        //   self.datalist.push({name: param,contractAddress: result.contractAddress})\n      });\n    },\n\n    //2.0 导致isAddContract为1\n    openAddContract(){\n      this.isAddContract = true\n    },\n    //4.0\n    doAddContract(){\n        let self = this\n        this.$refs.AddContractForm.validate(async (valid) =>{ //检验表单\n        if(valid){\n          //console.info('AddContract form',this.AddContractForm.account, this.AddContractForm.property, this.AddContractForm.credit)\n          let content = {}\n          content.ReceiptType = \"new\"  //!!!!\n          content.receiptID = self.datalist.length+1\n\n          content.fromAccount = this.AddContractForm.fromAccount\n          content.toAccount = this.AddContractForm.toAccount\n          content.prover = this.AddContractForm.prover\n          content.amount = this.AddContractForm.amount\n\n         \n          content.financinged = 0\n          content.settled = 0\n          /*\n          content.transferRecord = {}\n          let t\n          t.content.transferRecord.length=0\n          content.transferRecord.push(t)\n          */\n          content.leftValue = this.AddContractForm.amount\n\n          //content.contract = DEFAULTCONTRCT\n          //content.addr = DEFAULTCONTRACTADDRESS\n          content.func = 'AddContract'\n\n          //5.0\n          this.makeAddContract(content)\n          \n          \n          this.$Message.success('发起新合同成功')\n          this.cancelAddContract()\n        }\n        else {\n          this.$Message.error('请正确填写表单')\n        }\n      })\n      // this.isAddContract = false\n    },\n    cancelAddContract () {\n      // 重置功能添加表单对象\n      this.$refs.AddContractForm.resetFields()\n      this.AddContractForm = {}\n      this.isAddContract = false\n    },\n\n    openFinancing(){\n      this.isFinancing = true\n    },\n    doFinancing(){\n        let self = this\n        this.$refs.FinancingForm.validate(async (valid) =>{ //检验表单\n        if(valid){\n          let content = {}\n          content.ReceiptType = \"financing\" \n          content.receiptID = this.FinancingForm.receiptID\n          //content.receiptID = this.FinancingForm.receiptID\n          content.fromAccount = self.datalist[this.FinancingForm.receiptID-1].fromAccount\n          content.toAccount = self.datalist[this.FinancingForm.receiptID-1].toAccount\n          content.amount = self.datalist[this.FinancingForm.receiptID-1].amount\n          content.prover = self.datalist[this.FinancingForm.receiptID-1].prover\n\n          content.financinged = 1\n          content.settled = self.datalist[this.FinancingForm.receiptID-1].settled\n\n          //content.contract = DEFAULTCONTRCT\n          //content.addr = DEFAULTCONTRACTADDRESS\n          content.func = 'Financing'\n\n          //content.receiptID = this.FinancingForm.receiptID\n          //content.transferRecord = self.datalist[this.FinancingForm.receiptID-1].transferRecord\n          content.leftValue = 0\n\n\n          this.makeFinancing(content)\n          \n          \n          this.$Message.success('单据融资成功')\n          this.cancelFinancing()\n        }\n        else {\n          this.$Message.error('请正确填写表单')\n        }\n      })\n      // this.isFinancing = false\n    },\n    cancelFinancing() {\n      // 重置功能添加表单对象\n      this.$refs.FinancingForm.resetFields()\n      this.FinancingForm = {}\n      this.isFinancing = false\n    },\n\n    openSettle(){\n      this.isSettle = true\n    },\n    doSettle(){\n        let self = this\n        this.$refs.SettleForm.validate(async (valid) =>{ //检验表单\n        if(valid){\n          let content = {}\n          content.receiptID = this.SettleForm.receiptID\n\n          //content.contract = DEFAULTCONTRCT\n          //content.addr = DEFAULTCONTRACTADDRESS\n          content.func = 'Settle'\n\n          this.makeSettle(content)\n          \n          \n          this.$Message.success('结算账款成功')\n          this.cancelSettle()\n        }\n        else {\n          this.$Message.error('请正确填写表单')\n        }\n      })\n    },\n    cancelSettle() {\n      // 重置功能添加表单对象\n      this.$refs.SettleForm.resetFields()\n      this.SettleForm = {}\n      this.isSettle = false\n    },\n\n    //点击Transfer的确认交易后1.0\n    cancelTransfer() {\n      this.$refs.TransferForm.resetFields()\n      this.TransferForm = {}\n      this.isTransfer = false\n    },\n    //打开单据转让\n    openTransfer() {\n        this.isTransfer = true\n    },\n    doTransfer() {\n        let self = this\n        this.$refs.TransferForm.validate(async (valid) =>{ //检验表单\n        if(valid){\n            let content = {}\n            content.ReceiptType = \"transfer\"  //!!!!\n            content.receiptID = self.datalist.length+1\n\n            content.fromAccount = this.TransferForm.fromAccount\n            content.toAccount = this.TransferForm.toAccount\n            content.amount = this.TransferForm.amount\n\n            content.prover = 0\n            content.financinged = 0\n            content.settled = 0\n            //form.transferRecord = []\n            content.leftValue = this.TransferForm.amount\n            \n            //content.contract = DEFAULTCONTRCT\n            //content.addr = DEFAULTCONTRACTADDRESS\n            content.func = 'Transfer'\n\n            this.makeTransfer(content)  //点击Transfer的确认交易后1.1\n            //   this.deploy(this.AddContractForm.name)\n            this.$Message.success('单据转让成功')\n            this.cancelTransfer()\n        }\n        else {\n          this.$Message.error('请正确填写表单')\n        }\n      })\n    }\n    \n  },\n  \n  /*\n  created () {\n    // this.deploy('Asset')\n    this.isRegister = false\n  },\n  */\n  \n};\n</script>\n\n<style lang=\"css\">\n</style>\n"],"sourceRoot":"src/view"}]}