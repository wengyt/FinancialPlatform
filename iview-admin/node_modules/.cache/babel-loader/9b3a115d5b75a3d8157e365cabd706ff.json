{"remainingRequest":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js!/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lxt/SupplyChain-master/iview-admin/src/components/main/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lxt/SupplyChain-master/iview-admin/src/components/main/main.vue","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/.babelrc","mtime":1583204240000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lxt/SupplyChain-master/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"/home/lxt/SupplyChain-master/iview-admin/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/lxt/SupplyChain-master/iview-admin/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from \"./components/side-menu\";\nimport HeaderBar from \"./components/header-bar\";\nimport TagsNav from \"./components/tags-nav\";\nimport User from \"./components/user\";\nimport ABackTop from \"./components/a-back-top\";\nimport Fullscreen from \"./components/fullscreen\";\nimport Language from \"./components/language\";\nimport ErrorStore from \"./components/error-store\";\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, routeEqual } from '@/libs/util';\nimport routers from '@/router/routers';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport \"./main.less\";\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    ErrorStore: ErrorStore,\n    User: User,\n    ABackTop: ABackTop\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['errorCount'])), {}, {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvatar: function userAvatar() {\n      return this.$store.state.user.avatarImgPath;\n    },\n    cacheList: function cacheList() {\n      var list = ['ParentView'].concat(_toConsumableArray(this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : []));\n      return list;\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    },\n    hasReadErrorPage: function hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    },\n    unreadCount: function unreadCount() {\n      return this.$store.state.user.unreadCount;\n    }\n  }),\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal', 'setHomeRoute', 'closeTag'])), mapActions(['handleLogin', 'getUnreadMessageCount'])), {}, {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      if (type !== 'others') {\n        if (type === 'all') {\n          this.turnToPage(this.$config.homeName);\n        } else {\n          if (routeEqual(this.$route, route)) {\n            this.closeTag(route);\n          }\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n    handleClick: function handleClick(item) {\n      this.turnToPage(item);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      var name = newRoute.name,\n          query = newRoute.query,\n          params = newRoute.params,\n          meta = newRoute.meta;\n      this.addTag({\n        route: {\n          name: name,\n          query: query,\n          params: params,\n          meta: meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n      this.$refs.sideMenu.updateOpenName(newRoute.name);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList();\n    this.setHomeRoute(routers);\n    var _this$$route = this.$route,\n        name = _this$$route.name,\n        params = _this$$route.params,\n        query = _this$$route.query,\n        meta = _this$$route.meta;\n    this.addTag({\n      route: {\n        name: name,\n        params: params,\n        query: query,\n        meta: meta\n      }\n    });\n    this.setBreadCrumb(this.$route); // 设置初始语言\n\n    this.setLocal(this.$i18n.locale); // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    } // 获取未读消息条数\n\n\n    this.getUnreadMessageCount();\n  }\n};",null]}